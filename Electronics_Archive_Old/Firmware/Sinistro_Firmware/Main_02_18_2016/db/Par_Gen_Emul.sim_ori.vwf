/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CCD_Read_Start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Clk_10")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Em_Del")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Em_Del[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Em_Del";
}

SIGNAL("Em_Del[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Em_Del";
}

SIGNAL("Em_Del[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Em_Del";
}

SIGNAL("Em_Del[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Em_Del";
}

SIGNAL("Em_Del[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Em_Del";
}

SIGNAL("Em_Del[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Em_Del";
}

SIGNAL("Em_Del[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Em_Del";
}

SIGNAL("Em_Del[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Em_Del";
}

SIGNAL("EOF_Act_Line")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Reset_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Start_Act_L")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("CCD_Read_Start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 349.387;
		LEVEL 1 FOR 54544.38;
		LEVEL 0 FOR 45106.233;
	}
}

TRANSITION_LIST("Clk_10")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("Em_Del[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("Em_Del[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("Em_Del[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("Em_Del[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 955.98;
		LEVEL 0 FOR 1600.087;
		LEVEL 1 FOR 799.913;
		LEVEL 0 FOR 1600.087;
		LEVEL 1 FOR 95043.933;
	}
}

TRANSITION_LIST("Em_Del[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 958.12;
		LEVEL 1 FOR 800.136;
		LEVEL 0 FOR 1599.864;
		LEVEL 1 FOR 800.136;
		LEVEL 0 FOR 95841.744;
	}
}

TRANSITION_LIST("Em_Del[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 556.079;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 400.118;
			LEVEL 1 FOR 399.882;
		}
		LEVEL 0 FOR 400.118;
		LEVEL 1 FOR 95043.803;
	}
}

TRANSITION_LIST("Em_Del[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 556.732;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 200.015;
			LEVEL 0 FOR 199.985;
		}
		LEVEL 1 FOR 200.015;
		LEVEL 0 FOR 599.985;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 200.015;
			LEVEL 0 FOR 199.985;
		}
		LEVEL 1 FOR 200.015;
		LEVEL 0 FOR 95243.253;
	}
}

TRANSITION_LIST("Em_Del[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 558.34;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 100.135;
			LEVEL 0 FOR 99.865;
		}
		LEVEL 1 FOR 100.135;
		LEVEL 0 FOR 499.865;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 100.135;
			LEVEL 0 FOR 99.865;
		}
		LEVEL 1 FOR 100.135;
		LEVEL 0 FOR 95141.525;
	}
}

TRANSITION_LIST("EOF_Act_Line")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2797.45;
		LEVEL 1 FOR 489.849;
		LEVEL 0 FOR 4125.354;
		LEVEL 1 FOR 377.715;
		LEVEL 0 FOR 92209.632;
	}
}

TRANSITION_LIST("Reset_n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.901;
		LEVEL 0 FOR 177.054;
		LEVEL 1 FOR 99817.045;
	}
}

TRANSITION_LIST("Start_Act_L")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 455.589;
		LEVEL 1 FOR 2100.015;
		LEVEL 0 FOR 299.985;
		LEVEL 1 FOR 2100.015;
		LEVEL 0 FOR 95044.396;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CCD_Read_Start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Clk_10";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Em_Del";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "Em_Del[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Em_Del[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Em_Del[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Em_Del[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Em_Del[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Em_Del[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Em_Del[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Em_Del[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "EOF_Act_Line";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Reset_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Start_Act_L";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 26475;
	MASTER = TRUE;
}
;
